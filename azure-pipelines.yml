trigger:
  branches:
    include:
      - hotfix/*
      - master

pool:
  vmImage: ubuntu-latest

variables:
  - name: is_master
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  - name: is_master_or_hotfix
    value: $[or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix/'))]
  - name: service_name
    value: pdb-awsm-front-end

stages:
  - stage: build
    jobs:
      - job: Build
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '14.x'
            displayName: 'Install Node.js'
          - script: rm .env && rm .env.staging && rm .env.development && cp .env.production .env && cat .env && cat .env.production
            displayName: 'Add Environment'
          - script: cp .npmrc ~/.npmrc
            displayName: 'Add Bryntum keys'
          - script: npm ci
            displayName: 'Install NPM Packages'
          - script: cat ~/.npmrc && cat .env && ls node_modules && ls node_modules/@bryntum/schedulerpro
            displayName: 'Sanity Check'
          - script: npm run build
            displayName: 'Compile Application'

  - stage: staging
    dependsOn: [build]
    condition: and(succeeded(), eq(variables.is_master, true))
    variables:
      - name: env
        value: staging
      - name: bucket_name
        value: pdb-awsm-frontend-stg
      - name: cf_distribution
        value: E134PKZ16XWL56

    jobs:
      - job: DeployStaging
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '14.x'
            displayName: 'Install Node.js'
          - script: rm .env && rm .env.development && rm .env.production && cp .env.staging .env && cat .env && cat .env.staging
            displayName: 'Add Staging Environment'
          - script: cp .npmrc ~/.npmrc
            displayName: 'Add Bryntum keys'
          - script: npm ci
            displayName: 'Install NPM Packages'
          - script: cat ~/.npmrc && cat .env && ls node_modules && ls node_modules/@bryntum/schedulerpro
            displayName: 'Sanity Check'
          - script: npm run build
            displayName: 'Compile Application'
          - template: azure-pipelines-deploy-to-s3-template.yml
            parameters:
              folder_name: build
              bucket_name: $(bucket_name)
              cf_distribution: $(cf_distribution)

      - deployment: FinishStaging
        dependsOn: [DeployStaging]
        environment: PDBAWSMWebStaging

  - stage: uat
    dependsOn: [staging]
    condition: and(succeeded(), eq(variables.is_master, true))
    variables:
      - name: env
        value: staging
      - name: bucket_name
        value: pdb-awsm-frontend-uat
      - name: cf_distribution
        value: E3HIZ6UO0PMRMU

    jobs:
      - job: DeployUAT
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '14.x'
            displayName: 'Install Node.js'
          - script: rm .env && rm .env.development && rm .env.production && rm .env.staging && cp .env.uat .env && cat .env && cat .env.uat
            displayName: 'Add UAT Environment'
          - script: cp .npmrc ~/.npmrc
            displayName: 'Add Bryntum keys'
          - script: npm ci
            displayName: 'Install NPM Packages'
          - script: cat ~/.npmrc && cat .env && ls node_modules && ls node_modules/@bryntum/schedulerpro
            displayName: 'Sanity Check'
          - script: npm run build
            displayName: 'Compile Application'
          - template: azure-pipelines-deploy-to-s3-template.yml
            parameters:
              folder_name: build
              bucket_name: $(bucket_name)
              cf_distribution: $(cf_distribution)

      - deployment: FinishStaging
        dependsOn: [DeployUAT]
        environment: PDBAWSMWebUAT
