# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master
  - staging
  - develop
  - sprint/*

pool:
  vmImage: ubuntu-latest

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: "12.x"
    displayName: "Install Node.js"
  - script: rm .env && cp .env.staging .env && cat .env && cat .env.staging
    displayName: "Add Staging Environment"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/stage'))
  - script: rm .env && cp .env.prod .env && cat .env && cat .env.prod
    displayName: "Add Prod Environment"
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  - script: cp .npmrc.trial ~/.npmrc
    displayName: "Add Bryntum Repo"
  - script: npm install @bryntum/schedulerpro@npm:@bryntum/schedulerpro-trial --legacy-peer-deps
    displayName: "Install Bryntum Trial Version"
  - script: npm install --force --no-save
    displayName: "Install NPM Packages"
  - script: cat ~/.npmrc && ls node_modules && ls node_modules/@bryntum && ls node_modules/@bryntum/schedulerpro
  #- script: ls node_module
  # displayName: "Debug"
  - script: npm run lint
    displayName: "Lint Source Code"
  - script: npm test
    displayName: "Run Unit Tests"
  # - script: sed -i "s|SF:/__w|SF:/home/vsts/work|g" coverage/lcov.info
  #   displayName: Change Source File path in LCOV
  # - publish: coverage/lcov.info
  #   displayName: Create/Publish LCOV file
  #   artifact: jest-lcov-sonar
  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: "awsm-sonarcloud"
      organization: "digitaldelivery"
      scannerMode: "CLI"
      configMode: "manual"
      cliProjectKey: "PDB-AWSM-Frontend"
      cliProjectName: "PDB-AWSM-Frontend"
      cliSources: "."
      extraProperties: |
        sonar.sources=./src
        sonar.tests=./src/test
        sonar.exclusions= **/reducer/**, **/sagas/**, **/action/**, **/factory/**, **/*style.js, **/*styles.js, **/business/utils/**, **/core/utils/**, **/Typography/**, **/styles/**, **/*Style.js, **/*Styles.js, **/core/actions/**, **/core/base/**, **/core/translate/**, **/core/enums/**, **/serviceWorker.js, **/App.jsx, **/Landing/Base.jsx, **/*.js, **/MapsVsMops/**, **/Landing/**, **/routes.jsx, src/index.jsx, **/common/utils/**, **/core/components/**, src/delta/pdb/index.jsx, src/delta/RBDdemandPlanner/index.jsx, src/delta/petcoUser/index.jsx, src/delta/kpi/index.jsx, src/delta/demandPlanner/index.jsx, src/delta/enterpriseOptimizer/index.jsx, src/delta/PETCO/index.jsx, src/delta/pricingAnalyst/index.jsx, src/delta/commercialPricingAnalyst/index.jsx, src/delta/pricingAnalystPDB/index.jsx, src/delta/melakaPlanner/index.jsx, src/delta/CBDdemandPlanner/index.jsx,
        sonar.javascript.lcov.reportPaths= $(Pipeline.Workspace)/jest-lcov-sonar/lcov.info
  - task: SonarCloudAnalyze@1
  - script: npm run build
    displayName: "Compile Application"
  - task: CopyFiles@2
    displayName: "Copy Files to Artifact Dev Directory"
    inputs:
      TargetFolder: "$(Build.ArtifactStagingDirectory)"
      Contents: |
        build/**
  - task: PublishBuildArtifacts@1
    displayName: Export compiles html/js/css
    inputs:
      pathToPublish: "$(Build.ArtifactStagingDirectory)"
      artifactName: web_assets
